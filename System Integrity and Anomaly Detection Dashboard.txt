System Integrity and Anomaly Detection Dashboard

OS
Windows
Critical OS Errors (Last 24 Hours)
Index=Your_Windows_Index sourcetype=”WinEventLog:System” (EventLevelName=”Error” OR EventLevelName=”Critical”)
| stats count by _time, host, SourceName, EventCode, Message
| sort -_time
| head 20

New Services Installed
Index=Your_Windows_Index sourcetype=”WinEventLog:System” EventCode=7045 OR index=Your_Windows_Index sourcetype=”WinEventLog:Security” EventCode=4697
| eval ServiceName=coalesce(param1, ServiceName), ServiceFileName=coalesce(param2, ServiceFileName), ServiceType=coalesce(param3,ServiceType), StartType=coalesce(param4,StartType), AccountName=coalesce(param5,AccountName)
| table _time, host, ServiceName, ServiceFileName, StartType, AccountName, Message
| sort -_time

Scheduled Tasks Created/Modified
Index=Your_Windows_Index sourcetype=”WinEventLog:Microsoft-Windows-TaskScheduler/Operational” (EventCode=106 OR EventCode=140 OR EventCode=141 OR EventCode=200)
| eval Action=case(EventCode=106, “Created”, EventCode=140, “Updated”, EventCode=141, “Deleted”, EventCode=200, “Executed”)
| rex field=Message “Task Scheduler registered task \”(?[^\”]+)\””
| rex field=Message “Task Scheduler updated task \”(?[^\”]+)\””
| rex field=Message “Task Scheduler deleted task \”(?[^\”]+)\””
| rex field=Message “Task Scheduler launched action \”(?[^\”]+)\” in Task \”(?[^\”]+)\””
| table _time, host, Action, TaskPath, TaskAction, UserID, Message
| sort -_time

System Time Changes
Index=Your_Windows_Index sourcetype=”WinEventLog:Security” EventCode=4616
| eval PreviousTime=mvindex(Message, 1), NewTime=mvindex(Message,2) // Adjust based on actual message format or use fields if extracted
| rex field=Message “Previous Time:\s+(?[^L]+UTC)”
| rex field=Message “New Time:\s+(?[^L]+UTC)”
| rex field=Message “Process Name:\s+(?[^\r\n]+)”
| table _time, host, SubjectUserName, ProcessName, PreviousTime, NewTime
| sort -_time

Linux
Critical OS Errors (e.g., Kernel Panic, OOM Killer)
Index=Your_Linux_Index sourcetype=syslog OR sourcetype=kern_log OR sourcetype=linux_messages (“kernel panic” OR “Out of memory: Kill process” OR “segfault at” OR “general protection fault”)
| stats count by _time, host, process, message // Fields may vary based on log source
| sort -_time

New Services Enabled/Disabled (systemd)
Index=Your_Linux_Index sourcetype=syslog OR sourcetype=linux_messages (“enabled unit” OR “disabled unit” OR “Started” OR “Stopped” OR “Failed”) AND (systemd OR service)
| rex “((?Enabled|Disabled) unit file|(?Started|Stopped|Failed)) (?<service_unit>[^:]+).service”
| search service_unit=* AND action=*
| stats count by _time, host, service_unit, action
| sort -_time

Cron Job Modifications/Creations (Requires Auditd)
Index=Your_Auditd_Index sourcetype=linux_audit type=SYSCALL (key=”cron_change” OR (path=”/etc/cron.d/” OR path=”/var/spool/cron/” OR path=”/etc/crontab”)) (syscall=”rename” OR syscall=”write” OR syscall=”creat” OR syscall=”unlink”)
| stats values(syscall) as actions, values(path) as files_changed by _time, host, auid, exe
| sort -_time

System Time Changes (Requires Auditd)
Index=Your_Auditd_Index sourcetype=linux_audit type=SYSCALL (syscall=”settimeofday” OR syscall=”adjtimex” OR syscall=”clock_settime”) key=”time_change”
| stats count by _time, host, auid, exe, syscall
| sort -_time

File Integrity Monitoring
Windows
Changes to Critical System Files (e.g., System32 DLLs, drivers – FIM Tool/Sysmon)
Index=Your_Sysmon_Index (EventCode=11 OR EventCode=23) TargetFilename REGEXP “^C:\Windows\System32\.*\.(dll|exe|sys)$”
| eval Action=if(EventCode=11, “Created/Overwritten”, “Deleted”)
| stats count, values(ProcessName) as ModifyingProcesses by _time, host, User, Action, TargetFilename
| sort -_time

Unauthorized Executable Creation in User Temp/Downloads Folders
Index=Your_Sysmon_Index EventCode=11 TargetFilename REGEXP “^C:\Users\\[^\\\\]+\\(AppData\\Local\\Temp\\|Downloads\\).*\.(exe|dll|scr|bat|vbs|ps1|js)$”
| stats count by _time, host, User, ProcessName, TargetFilename
| sort -_time

Linux
Changes to Critical System/Configuration Files (e.g., /etc/passwd, /etc/ssh/sshd_config – Auditd/FIM Tool)
Index=Your_Auditd_Index sourcetype=linux_audit type=PATH key IN (“critical_config_files”, “sensitive_binaries”)
| join type=outer pid ppid [ search index=Your_Auditd_Index sourcetype=linux_audit type=SYSCALL | fields pid ppid syscall exe auid ]
| stats values(syscall) as syscalls, values(name) as files_changed by _time, host, auid, exe, key
| sort -_time

Creation of Executable Files in /tmp or /var/tmp
Index=Your_Auditd_Index sourcetype=linux_audit type=SYSCALL (syscall=”creat” OR syscall=”openat” OR syscall=”open”) (path=”/tmp/” OR path=”/var/tmp/”) (mode=”x” OR a2=”S_IXUSR” OR a2=”S_IXGRP” OR a2=”S_IXOTH”) key=”tmp_executable”
| join type=outer pid [ search index=Your_Auditd_Index sourcetype=linux_audit type=EXECVE | fields pid exe cwd ]
| stats count, values(path) as created_files, values(cwd) as creating_process_cwd by _time, host, auid, exe
| sort -_time

Basic Performance Metrics (Anomalies)
Windows and Linux
High CPU Utilization (Sustained or Anomalous Spikes)
Index=Your_Perf_Index sourcetype=Perfmon:CPU OR sourcetype=linux_performance_metrics metric_name=”% Processor Time” OR metric_name=”cpu.usage.average” earliest=”-1h”
| stats avg(Value) as avg_cpu_percent by host, instance // instance for Windows might be “_Total” or specific cores
| where instance=”_Total” OR isnull(instance) // Focus on total CPU
| where avg_cpu_percent > 90 // Sustained above 90% for the last hour
| sort -avg_cpu_percent

Anomalous Spike using anomalydetection
Index=Your_Perf_Index sourcetype=Perfmon:CPU OR sourcetype=linux_performance_metrics metric_name=”% Processor Time” OR metric_name=”cpu.usage.average” instance=”_Total” OR isnull(instance)
| timechart span=5m avg(Value) as avg_cpu by host
| anomalydetection avg_cpu by host action=annotate // Annotates anomalies on the timechart
// To list hosts with recent anomalies:
// index=Your_Perf_Index sourcetype=Perfmon:CPU OR sourcetype=linux_performance_metrics metric_name=”% Processor Time” OR metric_name=”cpu.usage.average” instance=”_Total” OR isnull(instance)
// | bucket _time span=5m
// | stats avg(Value) as avg_cpu_5min by _time, host
// | eventstats avg(avg_cpu_5min) as hist_avg_cpu, stdev(avg_cpu_5min) as hist_stdev_cpu by host
// | where avg_cpu_5min > (hist_avg_cpu + 3*hist_stdev_cpu) AND avg_cpu_5min > 50 // Spike is 3 std devs above avg and > 50%
// | stats earliest(_time) as first_spike_time, latest(_time) as last_spike_time, max(avg_cpu_5min) as peak_cpu_spike by host
// | where last_spike_time >= relative_time(now(), “-1h”) // Spike in last hour
// | sort -peak_cpu_spike

High Memory Utilization (Sustained or Anomalous Spikes)
Index=Your_Perf_Index sourcetype=Perfmon:Memory OR sourcetype=linux_performance_metrics metric_name=”% Committed Bytes In Use” OR metric_name=”mem.used.percent” earliest=”-1h”
| stats avg(Value) as avg_mem_percent by host
| where avg_mem_percent > 90 // Sustained above 90% for the last hour
| sort -avg_mem_percent

Low Disk Space
Index=Your_Perf_Index sourcetype=Perfmon:”LogicalDisk” OR sourcetype=df OR sourcetype=linux_disk_space metric_name=”% Free Space” OR metric_name=”disk.free.percent”
| stats latest(Value) as latest_disk_free_percent by host, instance // instance is drive letter or mount point
| where latest_disk_free_percent < 10 // Less than 10% free space
| sort host, latest_disk_free_percent

Anomalous Outbound Network Activity (Spike in Connections or Data Volume – Sysmon/Auditd/Netflow)
Index=Your_Sysmon_Index EventCode=3 Direction=”outbound” NOT (DestinationIp=”127.0.0.1” OR DestinationIp=”::1”)
| timechart span=1h dc(DestinationPort) as distinct_outbound_ports by host
| anomalydetection distinct_outbound_ports by host action=annotate
